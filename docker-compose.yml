version: '3.1'

services:
  mongo:
    image: mongo
    volumes:
      - mongo-data:/data/db

  mongo-seed:
    build: ./mongo-seed
    depends_on:
      - mongo

  mongo-express:
    image: mongo-express
    depends_on:
      - mongo
    ports:
      - 8081:8081
    depends_on:
      - mongo

  redis:
    image: redis:6-alpine
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  s3-storage:
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - s3-data:/data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3

  s3-seed:
    image: minio/mc
    depends_on:
      - s3-storage
    volumes:
      - ./s3-seed:/img
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://s3-storage:9000 minio minio123 --api S3v4;
      mc admin user add minio development development;
      mc admin policy set minio readwrite user=development;
      mc mb minio/library-images;
      mc policy set public minio/library-images;
      mc cp /img/biblioteca.jpg minio/library-images;
      exit 0;
      "

  server:
    build:
      context: '.'
      dockerfile: 'Dockerfile.server'
    depends_on:
      - redis
      - s3-storage
      - mongo
    ports:
      - 3000:3000
    environment:
      NODE_ENV: production
      COOKIE_SECRET: s3kr3t
      MONGODB_HOST: mongo
      MONGODB_PORT: 27017
      REDIS_HOST: redis
      REDIS_PORT: 6379
      S3_HOST: s3-storage
      S3_PORT: 9000
      S3_ACCESS_KEY_ID: development
      S3_SECRET_ACCESS_KEY: development

  app:
    build:
      context: '.'
      dockerfile: 'Dockerfile.app'
      args:
        REACT_APP_BACKEND_URL: 'http://localhost:3000'
    depends_on:
      - server
    ports:
      - 8080:80

volumes:
  mongo-data:
  redis-data:
  s3-data:
