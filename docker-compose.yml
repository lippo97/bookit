version: '3.1'

services:
  mongo:
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db

  mongo-seed:
    build: ./mongo-seed
    depends_on:
      - mongo

  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    depends_on:
      - mongo

  redis:
    image: redis:6-alpine
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  s3-storage:
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - s3-data:/data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3

  s3-seed:
    image: minio/mc
    depends_on:
      - s3-storage
    volumes:
      - ./s3-seed:/img
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://s3-storage:9000 minio minio123 --api S3v4;
      mc admin user add minio development development;
      mc admin policy set minio readwrite user=development;
      mc mb minio/library-images;
      mc policy set public minio/library-images;
      mc cp /img/biblioteca.jpg minio/library-images;
      exit 0;
      "

  app:
    build:
      context: '.'
      dockerfile: 'Dockerfile.app'
      args:
        REACT_APP_BACKEND_SERVER: 'http://backend:3000'
    volumes:
      - ./packages/app:/app
      - ./packages/resources:/resources
      - ./packages/shared:/shared
    container_name: docker-compose-web-ui
    ports:
      - 8080:8080

volumes:
  mongo-data:
  redis-data:
  s3-data:
